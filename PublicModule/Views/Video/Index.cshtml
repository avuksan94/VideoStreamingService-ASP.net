@using System.Text;
@using PublicModule.Pages;
@model IEnumerable<VMPublicVideo>

@{
    ViewData["Title"] = "Index";

    int numRows = 3;
    int cardsPerRow = (int)Math.Ceiling((double)Model.Count() / numRows);

    Pager pager = new Pager();
    int pageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }

}

<div class=" row justify-content-center">
    <h1>Video page</h1>
</div>

<p>
    <a class="btn btn-primary" asp-action="Index" asp-route-clearFilter="true">Clear Search</a>
</p>

@using (Html.BeginForm("Index", "Video", FormMethod.Get))
{
    <div class="input-group rounded">
        <input type="search" class="form-control rounded" id="searchQuery" name="searchQuery" placeholder="Search" aria-label="Search" aria-describedby="search-addon" />
        <span class="input-group-text border-0" id="search-addon">
            <i class="fas fa-search"></i>
        </span>
    </div>

    <br>
    <div class="containter">
        @if (pager.TotalPages > 0)
        {
            <h3>Page:</h3>
            <ul class="pagination justify-content-lg-start">
                @for (var pg = pager.StartPage; pg <= pager.EndPage; pg++)
                {
                    <li class="page-item @(pg == pager.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-controller="Video" asp-action="Index" asp-route-page="@pg" asp-route-sortOrder="@ViewBag.CurrentSortOrder">@pg</a>
                    </li>
                }
            </ul>
        }
    </div>
}



<br>
<div>
    <div>
        <strong>Sort by:</strong>
        <select id="sortOrder" onchange="location = this.value;">
            <option value="">Select...</option>
            <option value="@Url.Action("Index", new { sortOrder = "Name" })">Name</option>
            <option value="@Url.Action("Index", new { sortOrder = "Genre" })">Genre</option>

            <option value="@Url.Action("Index", new { sortOrder = "Name desc" })">Name desc</option>
            <option value="@Url.Action("Index", new { sortOrder = "Genre desc" })">Genre desc</option>

        </select>
    </div>
</div>

<br>

<div class="container">

    @for (var i = 0; i < numRows; i++)
    {
        <div class="row p-4 justify-content-around">

            @foreach (var video in Model.Skip(i * cardsPerRow).Take(cardsPerRow))
            {
                <div class="card col-4 services-card">
                    <div class="services-img-window">
                        <a asp-controller="Video" asp-action="Details" asp-route-id="@video.Id">
                            <img src="@video.Image.Content" class="card-img-top img-fluid">
                        </a>
                    </div>
                    <div class="card-body">
                        <h3 class="card-title">@video.Name</h3>
                        <p class="card-text">@video.Description</p>
                    </div>
                </div>
            }
        </div>
    }

</div>

@section Scripts {
    @{
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                document.getElementById('pageSize').value = '@ViewBag.PageSize';
            });
        </script>
    }
}

